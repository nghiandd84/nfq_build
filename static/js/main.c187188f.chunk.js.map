{"version":3,"sources":["theme.ts","shared/Constants.ts","shared/NasaService.ts","stateManagement/Store.ts","shared/DialogService.ts","component/searchItem/SearchItemComponent.tsx","component/home/Home.tsx","component/searchList/SearchList.tsx","component/search/Search.tsx","component/detail/Detail.tsx","component/notfound/NotFound.tsx","component/playMedia/PlayMedia.tsx","serviceWorker.ts","index.tsx"],"names":["getNasaTheme","theme","createMuiTheme","palette","primary","main","deepPurple","typography","fontFamily","join","fontSize","h1","color","grey","fontWeight","breakpoints","down","h3","h4","Constants","STORE","COLLECTION_DATA","META_DATA","NasaService","queryString","nasaService","getInstance","uri","API_URL","Promise","resolve","reject","fetch","then","response","json","data","collection","metadata","total_hits","totalResult","searchResult","items","map","item","convertSearchDataToNasaItem","result","total","catch","err","metaLink","searchItem","isHaveVideo","forEach","itemData","media_type","createDate","date_created","description","id","nasa_id","keywords","href","title","type","Store","nasaItem","currentCollection","getNasaCollection","findIndex","currentNasaItem","newNasaItem","previewLink","videoLink","undefined","isFavorite","push","localStorage","setItem","JSON","stringify","splice","currentCollectionStr","getItem","parse","Array","isArray","localStorageKey","currentMetaDataStr","fetchMetaData","DialogService","instance","styles","boxImage","alignItems","display","height","justifyContent","marginBottom","boxShadow","date","lineHeight","textAlign","width","marginTop","overflow","WebkitBoxRrient","WebkitLineClamp","whiteSpace","keyword","textOverflow","maxWidth","imagePreview","maxHeight","SearchItemComponent","props","state","isLoading","console","log","this","showPlayMediaDialog","setState","getMetaData","link","indexOf","whenSearch","saveNasaItem","ThemeProvider","key","locale","Box","style","CircularProgress","className","onClick","onClickPreview","background","value","day","month","year","Typography","variant","React","Component","boxItem","padding","iconButton","border","borderRadius","marginRight","pinkIconButton","pink","HomeComponent","nasaItemList","history","showNasaItemDetailDialog","removeNasaItem","Grid","container","direction","justify","Button","startIcon","onAddNew","xs","sm","md","lg","IconButton","onToggleFavorite","aria-label","onDelete","onEdit","addButton","paddingBottom","paddingTop","SearchListComponent","spacing","onAddToCollection","SearchComponent","searchTimeOut","isSearching","queryText","goBack","event","clearTimeout","newQueryText","target","setTimeout","fetchData","resultData","component","Link","onBack","TextField","margin","placeholder","fullWidth","autoFocus","onChange","onSearchChange","useStylesReddit","makeStyles","createStyles","root","backgroundColor","transition","transitions","create","fade","borderColor","focused","RedditTextField","classes","InputProps","disableUnderline","inputBox","actionBox","closeButton","cursor","float","position","right","top","closeIcon","DetailComponent","callback","editMode","openDialog","handlCloseDialog","handleShowDetail","bind","e","handleUpdateItem","isEdit","fieldName","fieldValue","Dialog","scroll","onClose","aria-labelledby","open","DialogTitle","DialogContent","disabled","label","defaultValue","multiline","rows","rowsMax","FormControl","InputLabel","Select","handleChangeType","MenuItem","required","DialogActions","onSave","NotFound","titleMessage","paddingLeft","dialogBox","boxContent","mediaBox","minWidth","PlayMediaComponent","handleShowMedia","originImageUrl","find","originVideoUrl","dividers","src","alt","controls","Boolean","window","location","hostname","match","routing","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c187188f.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport { deepPurple, grey } from '@material-ui/core/colors';\nexport default function getNasaTheme() {\n    const theme: any = createMuiTheme({\n        palette: {\n            primary: {\n                main: deepPurple[400],\n            },\n        },\n        typography: {\n            fontFamily: [\n                '-apple-system',\n                'BlinkMacSystemFont',\n                '\"Segoe UI\"',\n                'Roboto',\n                '\"Helvetica Neue\"',\n                'Arial',\n                'sans-serif',\n                '\"Apple Color Emoji\"',\n                '\"Segoe UI Emoji\"',\n                '\"Segoe UI Symbol\"',\n            ].join(','),\n            fontSize: 13,\n        },\n    });\n    theme.typography.h1 = {\n        color: grey[400],\n        fontSize: '5rem',\n        fontWeight: 500,\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '3rem',\n        },\n    };\n    theme.typography.h3 = {\n        fontSize: '3rem',\n        fontWeight: 500,\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '2rem',\n        },\n    };\n    theme.typography.h4 = {\n        fontSize: '1.5rem'\n    }\n    return theme;\n};\n","export default class Constants {\n    // tslint:disable-next-line:max-classes-per-file\n    public static STORE = class {\n        public static COLLECTION_DATA = 'COLLECTION_DATA';\n        public static META_DATA = 'META_DATA';\n    }\n}\n","import { INasaItem } from './INasaItem';\nimport ISearchItem from './SearchItem';\nconst API_URL = 'https://images-api.nasa.gov/';\nexport default class NasaService {\n\n    private static nasaService: NasaService;\n\n    static getInstance(): NasaService {\n        if (!NasaService.nasaService) {\n            NasaService.nasaService = new NasaService();\n        }\n        return NasaService.nasaService;\n    }\n\n    fetchData(queryString: string): Promise<{ result: INasaItem[], total: number }> {\n        const nasaService = NasaService.getInstance();\n        const uri = API_URL + 'search'\n            + '?q=' + queryString;\n        return new Promise<{ result: INasaItem[], total: number }>((resolve, reject) => {\n            fetch(uri)\n                // tslint:disable-next-line:no-any\n                .then((response: any) => response.json())\n                // tslint:disable-next-line:no-any\n                .then((data: any) => {\n                    const collection = data.collection;\n                    if (collection.metadata && collection.metadata.total_hits) {\n                        const totalResult = collection.metadata.total_hits;\n                        const searchResult =\n                            // tslint:disable-next-line:no-any\n                            collection.items.map((item: any) => nasaService.convertSearchDataToNasaItem(item));\n                        resolve({ result: searchResult, total: totalResult });\n                    } else {\n                        resolve({ result: [], total: 0 });\n                    }\n                    // tslint:disable-next-line:no-any\n                }).catch((err: any) => {\n                    reject(err);\n                });\n        });\n    }\n\n    fetchMetaData(metaLink: string): Promise<string[]> {\n        return new Promise<string[]>((resolve, reject) => {\n            fetch(metaLink)\n                // tslint:disable-next-line:no-any\n                .then((response: any) => response.json())\n                .then((data: string[]) => {\n                    resolve(data);\n                // tslint:disable-next-line:no-any\n                }).catch((err: any) => {\n                    reject(err);\n                });\n        });\n    }\n\n    private convertSearchDataToNasaItem(searchItem: ISearchItem): INasaItem {\n        const data = searchItem && searchItem.data[0] ? searchItem.data[0] : null;\n        if (data) {\n            let isHaveVideo = false;\n            // tslint:disable-next-line:no-any\n            searchItem.data.forEach((itemData: any) => {\n                if (itemData.media_type === 'video') {\n                    isHaveVideo = true;\n                }\n            });\n            const result: INasaItem = {\n                createDate: data.date_created,\n                description: data.description,\n                id: data.nasa_id,\n                keywords: data.keywords ? data.keywords : [],\n                metaLink: searchItem.href,\n                title: data.title,\n                type: isHaveVideo ? 'video' : 'image',\n            };\n            return result;\n        }\n        // tslint:disable-next-line:no-any\n        return null as any;\n    }\n}\n","import { INasaItem } from '../shared/INasaItem';\nimport Constants from '../shared/Constants';\nimport NasaService from '../shared/NasaService';\nexport default class Store {\n    static saveNasaItem(nasaItem: INasaItem) {\n        const currentCollection = Store.getNasaCollection();\n        const findIndex = currentCollection.findIndex((item: INasaItem) => item.id === nasaItem.id);\n        if (findIndex >= 0) {\n            const currentNasaItem = currentCollection[findIndex];\n            const newNasaItem = {\n                ...nasaItem,\n            };\n\n            if (currentNasaItem.previewLink && !nasaItem.previewLink) {\n                newNasaItem.previewLink = currentNasaItem.previewLink;\n            }\n            if (currentNasaItem.videoLink && !nasaItem.videoLink) {\n                newNasaItem.videoLink = currentNasaItem.videoLink;\n            }\n            if (currentNasaItem.isFavorite !== undefined && nasaItem.isFavorite === undefined) {\n                newNasaItem.isFavorite = currentNasaItem.isFavorite;\n            }\n            currentCollection[findIndex] = newNasaItem;\n        } else {\n            currentCollection.push(nasaItem);\n        }\n        localStorage.setItem(Constants.STORE.COLLECTION_DATA, JSON.stringify(currentCollection));\n    }\n\n    static removeNasaItem(nasaItem: INasaItem) {\n        const currentCollection = Store.getNasaCollection();\n        const findIndex = currentCollection.findIndex((item: INasaItem) => item.id === nasaItem.id);\n        if (findIndex >= 0) {\n            currentCollection.splice(findIndex, 1);\n            localStorage.setItem(Constants.STORE.COLLECTION_DATA, JSON.stringify(currentCollection));\n        }\n    }\n\n    static getNasaCollection(): INasaItem[] {\n        // tslint:disable-next-line:no-any\n        const currentCollectionStr: any = localStorage.getItem(Constants.STORE.COLLECTION_DATA);\n        // tslint:disable-next-line:no-any\n        const currentCollection: any = JSON.parse(currentCollectionStr);\n        return Array.isArray(currentCollection) ? currentCollection : [];\n    }\n\n    static getMetaData(nasaItem: INasaItem): Promise<string[]> {\n        return new Promise((resolve, reject) => {\n            const localStorageKey = Constants.STORE.META_DATA + '_' + nasaItem.id;\n            // tslint:disable-next-line:no-any\n            const currentMetaDataStr: any = localStorage.getItem(localStorageKey);\n            if (currentMetaDataStr) {\n                resolve(JSON.parse(currentMetaDataStr));\n            } else {\n                const nasaService = NasaService.getInstance();\n                nasaService.fetchMetaData(nasaItem.metaLink)\n                // tslint:disable-next-line:no-any\n                    .then((data: any) => {\n                        localStorage.setItem(localStorageKey, JSON.stringify(data));\n                        resolve(data);\n                    }).catch((err) => {\n                        reject(err);\n                    });\n            }\n        });\n    }\n}\n","import { INasaItem } from './INasaItem';\nexport default class DialogService {\n    private static instance: DialogService;\n\n    static getInstance() {\n        if (!DialogService.instance) {\n            DialogService.instance = new DialogService();\n        }\n        return DialogService.instance;\n    }\n\n    showPlayMediaDialog(nasaItem: INasaItem) {}\n    showNasaItemDetailDialog(nasaItem: INasaItem,\n                             isEditMode: boolean = false,\n                             callback?: (item: INasaItem) => void\n        ) {}\n\n}\n","\nimport React from 'react';\nimport { IntlProvider, FormattedDate } from 'react-intl';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PlayArrowRoundedIcon from '@material-ui/icons/PlayArrowRounded';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport getNasaTheme from '../../theme';\nimport { INasaItem } from '../../shared/INasaItem';\nimport Store from '../../stateManagement/Store';\nimport DialogService from '../../shared/DialogService';\nimport './SearchItemComponent.css';\n\ninterface ISearchItemProps {\n    item: INasaItem,\n    whenSearch?: boolean\n}\n\ninterface ISearchItemState {\n    isLoading: boolean,\n    previewLink?: string\n}\n\nconst styleTruncate = {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap' as const,\n};\n\nconst styles = {\n    boxImage: {\n        alignItems: 'center',\n        display: 'flex',\n        height: '150px',\n        justifyContent: 'center',\n        marginBottom: '30px',\n        boxShadow: '0px 30px 40px -26px rgba(0,0,0,0.75)'\n    },\n    date: {\n        height: '25px',\n        lineHeight: '25px',\n        textAlign: 'right' as const,\n        width: '130px',\n    },\n    description: {\n        display: '-webkit-box',\n        height: '75px',\n        lineHeight: '25px',\n        marginTop: '10px',\n        marginBottom: '10px',\n        overflow: 'hidden',\n        WebkitBoxRrient: 'vertical',\n        WebkitLineClamp: 3,\n        whiteSpace: 'pre-wrap' as const,\n    },\n\n    keyword: {\n        ...styleTruncate,\n        height: '25px',\n        lineHeight: '25px',\n        maxWidth: '58%',\n    },\n\n    imagePreview: {\n        maxHeight: '100%',\n        maxWidth: '100%',\n    },\n\n    title: {\n        display: '-webkit-box',\n        height: '58px',\n        overflow: 'hidden',\n        WebkitBoxRrient: 'vertical',\n        WebkitLineClamp: 2,\n    },\n};\n\nconst theme = getNasaTheme();\nexport default class SearchItemComponent extends React.Component<ISearchItemProps, ISearchItemState> {\n\n    constructor(props: ISearchItemProps) {\n        super(props);\n        this.state = {\n            isLoading: true,\n        };\n    }\n\n    onClickPreview() {\n        console.log(this.props);\n        const dialogService = DialogService.getInstance();\n        dialogService.showPlayMediaDialog(this.props.item);\n    }\n\n    componentDidMount() {\n        this.setState({\n            isLoading: true,\n        });\n        if (this.props.item.previewLink) {\n            this.setState({\n                previewLink: this.props.item.previewLink,\n            });\n        }\n        Store.getMetaData(this.props.item)\n            .then((data) => {\n                this.setState({\n                    isLoading: false,\n                });\n                for (const link of data) {\n                    if (link.indexOf('thumb.jpg') >= 0 && !this.props.item.previewLink) {\n                        this.props.item.previewLink = link;\n                        this.setState({\n                            previewLink: link,\n                        });\n                    }\n                    if (link.indexOf('.mp4') >= 0 && !this.props.item.videoLink) {\n                        this.props.item.videoLink = link;\n                    }\n                    if (!this.props.whenSearch) {\n                        Store.saveNasaItem(this.props.item);\n                    }\n                }\n            }).catch((err) => {\n                this.setState({\n                    isLoading: false,\n                });\n            });\n    }\n\n    render() {\n        return <ThemeProvider\n            key={this.props.item.id}\n            theme={theme}>\n            <IntlProvider locale='en'>\n                <Box\n                    style={styles.boxImage}\n                    boxShadow={3}>\n                    {\n                        this.state.isLoading ?\n                            <CircularProgress />\n                            : <div className={'previewBox'}\n                                onClick={() => this.onClickPreview()}\n                                style={{\n                                    background: 'url(' + this.props.item.previewLink + ')'}}\n                               >\n                                <PlayArrowRoundedIcon />\n                                </div>\n                    }\n                </Box>\n                <Box display='flex' justifyContent='space-between'>\n                    <Box style={styles.keyword}>\n                        {this.props.item.keywords.join(', ')}\n                    </Box>\n                    <Box style={styles.date}>\n                        <FormattedDate value={this.props.item.createDate}\n                            day='numeric'\n                            month='short'\n                            year='numeric' />\n                    </Box>\n                </Box>\n                <Box style={styles.title}>\n                    <Typography variant='h4'>{this.props.item.title}</Typography>\n                </Box>\n                <Box>\n                    <Typography variant='body1' style={styles.description}>{this.props.item.description}</Typography>\n                </Box>\n            </IntlProvider>\n        </ThemeProvider > ;\n    }\n}\n","\nimport React from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport getNasaTheme from '../../theme';\nimport Store from '../../stateManagement/Store';\nimport SearchItemComponent from '../searchItem/SearchItemComponent';\nimport { INasaItem } from '../../shared/INasaItem';\nimport { grey, pink } from '@material-ui/core/colors';\n\nimport DialogService from '../../shared/DialogService';\n\nconst boxItem = {\n    marginTop: 20,\n    padding: 10,\n};\n\nconst iconButton = {\n    border: 'solid 1px #bdbdbd',\n    borderRadius: '3px',\n    color: grey[400],\n    marginRight: '1rem',\n};\n\nconst pinkIconButton = {\n    border: 'solid 1px #bdbdbd',\n    borderRadius: '3px',\n    color: pink[400],\n    marginRight: '1rem',\n};\n\ninterface HomeState {\n    nasaItemList: INasaItem[];\n}\ninterface HomeProps { }\n\nexport default class HomeComponent extends React.Component<HomeProps, HomeState> {\n\n    constructor(props: HomeProps) {\n        super(props);\n        this.state = {\n            nasaItemList: [],\n        };\n    }\n\n    onAddNew() {\n        // tslint:disable-next-line:no-any\n        const props: any = this.props;\n        props.history.push('nasa_search');\n    }\n\n    onEdit(nasaItem: INasaItem) {\n        const dialogService = DialogService.getInstance();\n        dialogService.showNasaItemDetailDialog(\n            nasaItem,\n            true, (newNasaItem: INasaItem) => {\n                if (!newNasaItem) {\n                    return;\n                }\n                const nasaItemList = this.state.nasaItemList;\n                if (nasaItemList && Array.isArray(nasaItemList)) {\n                    const findIndex = nasaItemList.findIndex((item: INasaItem) => item.id === newNasaItem.id);\n                    if (findIndex >= 0) {\n                        nasaItemList[findIndex] = newNasaItem;\n                        this.setState({\n                            nasaItemList,\n                        });\n                    }\n                }\n            });\n    }\n\n    onDelete(nasaItem: INasaItem) {\n        const nasaItemList = this.state.nasaItemList;\n        if (nasaItemList && Array.isArray(nasaItemList)) {\n            const findIndex = nasaItemList.findIndex((item: INasaItem) => item.id === nasaItem.id);\n            if (findIndex >= 0) {\n                nasaItemList.splice(findIndex, 1);\n                this.setState({ nasaItemList });\n                Store.removeNasaItem(nasaItem);\n            }\n        }\n    }\n\n    onToggleFavorite(nasaItem: INasaItem) {\n        const nasaItemList = this.state.nasaItemList;\n        if (nasaItemList && Array.isArray(nasaItemList)) {\n            const findIndex = nasaItemList.findIndex((item: INasaItem) => item.id === nasaItem.id);\n            if (findIndex >= 0) {\n                let isFavorite = !!nasaItem.isFavorite;\n                isFavorite = !isFavorite;\n                nasaItemList[findIndex].isFavorite = isFavorite;\n                this.setState({\n                    nasaItemList,\n                });\n                Store.saveNasaItem(nasaItem);\n            }\n        }\n    }\n\n    componentDidMount() {\n        const nasaItemList = Store.getNasaCollection();\n        this.setState({\n            nasaItemList,\n        });\n    }\n\n    render() {\n        const theme = getNasaTheme();\n\n        return (\n            <ThemeProvider theme={theme}>\n                <Grid\n                    container={true}\n                    direction='row'\n                    justify='space-between'\n                    alignItems='center'\n                >\n                    <Grid>\n                        <Typography variant='h1'>NASA Collection</Typography>\n                    </Grid>\n                    <Grid>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            startIcon={<AddIcon />}\n                            onClick={() => this.onAddNew()}\n                        >Add new item\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid container={true}>\n                    {\n                        this.state.nasaItemList.map((nasaItem: INasaItem) =>\n                            // tslint:disable-next-line:jsx-wrap-multiline\n                            <Grid key={nasaItem.id} item={true} xs={12} sm={6} md={4} lg={3}>\n                                <div style={boxItem}>\n                                    <SearchItemComponent key={nasaItem.id} item={nasaItem} whenSearch={false} />\n                                    <div>\n                                        {\n                                            nasaItem.isFavorite ?\n                                                <IconButton onClick={() => this.onToggleFavorite(nasaItem)}\n                                                    style={pinkIconButton} aria-label='favorite'>\n                                                    <FavoriteIcon />\n                                                </IconButton> :\n                                                <IconButton onClick={() => this.onToggleFavorite(nasaItem)}\n                                                    style={iconButton} aria-label='unfavorite'>\n                                                    <FavoriteBorderIcon />\n                                                </IconButton>\n                                        }\n\n                                        <IconButton onClick={() => this.onDelete(nasaItem)}\n                                            style={iconButton} aria-label='delete'>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                        <IconButton onClick={() => this.onEdit(nasaItem)} style={iconButton} aria-label='delete'>\n                                            <EditIcon />\n                                        </IconButton>\n                                    </div>\n                                </div>\n                            </Grid>,\n                        )\n                    }\n                </Grid>\n            </ThemeProvider>\n        );\n    }\n}\n","\nimport React from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport SearchItemComponent from '../searchItem/SearchItemComponent';\nimport { INasaItem } from '../../shared/INasaItem';\nimport DialogService from '../../shared/DialogService';\n\ninterface ISearchListProps {\n    searchResult: INasaItem[]\n}\n\nconst boxItem = {\n    marginTop: 20,\n    padding: 10,\n};\n\nconst addButton = {\n    paddingBottom: '15px',\n    paddingTop: '15px',\n    width: '100%',\n};\n\nexport default class SearchListComponent extends React.Component<ISearchListProps, any> {\n\n    onAddToCollection(nasaItem: INasaItem) {\n        // StateStore.saveNasaItem(nasaItem);\n        const dialogService = DialogService.getInstance();\n        dialogService.showNasaItemDetailDialog(nasaItem, false);\n    }\n\n    render() {\n        const nasaItemList = this.props.searchResult;\n        return (<Grid container spacing={1}>\n            {\n                nasaItemList.map((nasaItem) =>\n                    <Grid key={nasaItem.id} item xs={12} sm={6} md={4} lg={3}  >\n                        <div style={boxItem}>\n                            <SearchItemComponent key={nasaItem.id} item={nasaItem} whenSearch={true}/>\n                            <Button style={addButton}\n                                variant='outlined'\n                                startIcon={<AddIcon />}\n                                onClick={() => this.onAddToCollection(nasaItem)}\n                            >Add to Nasa Collection\n                            </Button>\n                        </div>\n                    </Grid>\n                )\n            }\n        </Grid>);\n    }\n}\n","\nimport React from 'react';\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport SearchListComponent from '../searchList/SearchList';\n\nimport getNasaTheme from '../../theme';\nimport NasaService from '../../shared/NasaService';\nconst TIMEOUT_CONSTANT = 500;\n\ninterface SearchState {\n    isSearching: boolean,\n    queryText: string,\n    searchResult: Array<any>,\n    total: number\n}\n\nexport default class SearchComponent extends React.Component<any, SearchState> {\n    private searchTimeOut: any;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            isSearching: false,\n            queryText: '',\n            searchResult: [],\n            total: 0,\n        };\n    }\n    onBack() {\n        const props: any = this.props;\n        props.history.goBack();\n    }\n\n    onSearchChange(event: any) {\n        clearTimeout(this.searchTimeOut);\n        const newQueryText = event.target.value;\n        this.searchTimeOut = setTimeout(() => {\n            if (newQueryText !== this.state.queryText) {\n                this.setState({\n                    queryText: newQueryText,\n                });\n                console.log(newQueryText);\n                this.fetchData();\n            }\n        }, TIMEOUT_CONSTANT);\n    }\n\n    fetchData() {\n        this.setState({\n            isSearching: true,\n        });\n        const nasaService = NasaService.getInstance();\n        nasaService.fetchData(this.state.queryText).then((resultData) => {\n            this.setState({\n                isSearching: false,\n                searchResult: resultData.result,\n                total: resultData.total,\n            });\n        }).catch((err) => {\n            this.setState({\n                isSearching: false,\n            });\n        })\n    }\n\n    render() {\n        const theme = getNasaTheme();\n        return (\n            <ThemeProvider theme={theme}>\n                <Grid container={true}>\n                    <Button component={Link}\n                        startIcon={<ArrowBackIosIcon />}\n                        onClick={() => this.onBack()}>Back to Collection\n                    </Button>\n                </Grid>\n                <Grid container={true}>\n                    <Typography variant=\"h3\">Search from Nasa</Typography>\n                </Grid>\n                <Grid container={true}>\n                    <TextField\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        placeholder=\"Type something to search...\"\n                        fullWidth\n                        autoFocus\n                        onChange={(event) => this.onSearchChange(event)}\n                    />\n                </Grid>\n                {\n                    this.state.total ? (\n                        <Grid container={true}>\n                            &nbsp; {this.state.total} results for \"{this.state.queryText}\"\n                        </Grid>) : null\n                }\n                {\n                    this.state.total > 0 ? (<div><SearchListComponent searchResult={this.state.searchResult}></SearchListComponent></div>) : null\n                }\n            </ThemeProvider>\n        );\n    }\n}\n","\nimport React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckIcon from '@material-ui/icons/Check';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField';\nimport { ThemeProvider, makeStyles, fade, createStyles, Theme } from '@material-ui/core/styles';\nimport { OutlinedInputProps } from '@material-ui/core/OutlinedInput';\nimport getNasaTheme from '../../theme';\nimport DialogService from '../../shared/DialogService';\nimport { INasaItem } from '../../shared/INasaItem';\nimport './Detail.css';\nimport Store from '../../stateManagement/Store';\n\nconst useStylesReddit = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            border: '1px solid #e2e2e1',\n            overflow: 'hidden',\n            borderRadius: 4,\n            backgroundColor: '#fcfcfb',\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n            '&:hover': {\n                backgroundColor: '#fff',\n            },\n            '&$focused': {\n                backgroundColor: '#fff',\n                boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n                borderColor: theme.palette.primary.main,\n            },\n        },\n        focused: {},\n    }),\n);\n\nfunction RedditTextField(props: TextFieldProps) {\n    const classes = useStylesReddit();\n\n    return (\n        <TextField\n            InputProps={{ classes, disableUnderline: true } as Partial<OutlinedInputProps>}\n            {...props}\n        />\n    );\n}\n\nconst inputBox = {\n    marginBottom: '1rem',\n};\n\nconst actionBox = {\n    justifyContent: 'flex-start',\n    marginTop: '1rem',\n    padding: '8px 0px',\n};\n\nconst closeButton = {\n    cursor: 'pointer',\n    float: 'right' as const,\n    position: 'absolute' as const,\n    right: '0px',\n    top: '0px',\n};\n\nconst closeIcon = {\n    color: '#9E9E9E',\n    height: '40px',\n    marginRight: '10px',\n    marginTop: '10px',\n    width: '40px',\n};\n\nexport default class DetailComponent extends React.Component<any, any> {\n\n    private callback: any;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            editMode: false,\n            isLoading: false,\n            item: {},\n            openDialog: false,\n        };\n    }\n\n    onSave() {\n        const nasaItem = this.state.item;\n        Store.saveNasaItem(nasaItem);\n        this.handlCloseDialog();\n        if (this.callback) {\n            this.callback(nasaItem);\n        }\n    }\n\n    componentDidMount() {\n        const dialogService = DialogService.getInstance();\n        dialogService.showNasaItemDetailDialog = this.handleShowDetail.bind(this);\n    }\n\n    // tslint:disable-next-line:no-any\n    handleChangeType(e: any) {\n        this.handleUpdateItem('type', e.target.value);\n    }\n\n    handlCloseDialog() {\n        this.setState({\n            openDialog: false,\n        });\n    }\n\n    handleShowDetail(nasaItem: INasaItem, isEdit: boolean, callback: any) {\n        this.setState({\n            editMode: isEdit,\n            item: { ...nasaItem },\n            openDialog: true,\n        });\n        this.callback = callback;\n    }\n\n    handleUpdateItem(fieldName: string, fieldValue: string) {\n        const itemData = { ...this.state.item };\n        itemData[fieldName] = fieldValue;\n        this.setState({\n            item: itemData,\n        });\n    }\n\n    render() {\n        const theme = getNasaTheme();\n        return (\n            <ThemeProvider theme={theme}>\n                <Dialog\n                    fullWidth={true}\n                    scroll={'body'}\n                    onClose={() => this.handlCloseDialog()}\n                    aria-labelledby='edit-item'\n                    open={this.state.openDialog}>\n                    <DialogTitle>\n                        {this.state.editMode ? 'Edit' : 'Add to Collection'}\n                        <div style={closeButton} onClick={() => this.handlCloseDialog()}>\n                            <CloseIcon style={closeIcon} />\n                        </div>\n                    </DialogTitle>\n                    <DialogContent>\n                        <div style={inputBox}>\n                            <RedditTextField\n                                disabled={!this.state.editMode}\n                                fullWidth={true}\n                                label='Title'\n                                onChange={(e) => this.handleUpdateItem('title', e.target.value)}\n                                defaultValue={this.state.item.title}\n                                variant='filled'\n                            />\n                        </div>\n                        <div style={inputBox}>\n                            <RedditTextField\n                                disabled={!this.state.editMode}\n                                fullWidth={true}\n                                label='Description'\n                                onChange={(e) => this.handleUpdateItem('description', e.target.value)}\n                                defaultValue={this.state.item.description}\n                                multiline={true}\n                                rows={3}\n                                rowsMax={6}\n                                variant='filled'\n                                id='description-input'\n                            />\n                        </div>\n                        <div style={inputBox}>\n                            <FormControl\n                                variant='outlined'\n                                fullWidth={true}>\n                                <InputLabel className={'input-type-label'}>\n                                    Type\n                                </InputLabel>\n                                <Select\n                                    disabled={!this.state.editMode}\n                                    value={this.state.item.type}\n                                    onChange={(e) => this.handleChangeType(e)}\n                                >\n                                    <MenuItem value={'video'}>Video</MenuItem>\n                                    <MenuItem value={'image'}>Image</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <div style={inputBox}>\n                            <RedditTextField\n                                fullWidth={true}\n                                required={true}\n                                label='Link preview image url'\n                                onChange={(e) => this.handleUpdateItem('title', e.target.value)}\n                                defaultValue={this.state.item.previewLink}\n                                variant='filled'\n                                id='image-url-input'\n                            />\n                        </div>\n                        <div style={inputBox}>\n                            <RedditTextField\n                                disabled={!this.state.editMode}\n                                fullWidth={true}\n                                required={true}\n                                label='Link file url'\n                                onChange={(e) => this.handleUpdateItem('title', e.target.value)}\n                                defaultValue={this.state.item.videoLink}\n                                variant='filled'\n                                id='video-url-input'\n                            />\n                        </div>\n                        <DialogActions style={actionBox}>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                startIcon={<CheckIcon />}\n                                onClick={() => this.onSave()}\n                            > {this.state.editMode ? 'Save' : 'Add to Collection'}\n                            </Button>\n                        </DialogActions>\n                    </DialogContent>\n                </Dialog>\n            </ThemeProvider>\n        );\n    }\n}\n","\nimport React from 'react';\nconst NotFound: React.FC = () => {\n    return <h1>Not Found</h1>;\n}\n\nexport default NotFound;\n","\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport getNasaTheme from '../../theme';\nimport DialogService from '../../shared/DialogService';\nimport { INasaItem } from '../../shared/INasaItem';\nimport Store from '../../stateManagement/Store';\nimport './PlayMedia.css';\n\nconst titleMessage = {\n    color: '#d5d5d5',\n    fontSize: '3rem',\n    fontWeight: 'bold' as const,\n    marginBottom: '5px',\n    paddingLeft: '3px',\n};\n\nconst dialogBox = {\n    backgroundColor: '#bdbdbd',\n};\n\nconst boxContent = {\n    margin: '-5px 0px',\n    padding: '0px',\n};\n\nconst closeButton = {\n    float: 'right' as const,\n    position: 'absolute' as const,\n    right: '0px',\n    top: '0px',\n};\n\nconst mediaBox = {\n    borderRadius: '4px',\n    minWidth: '400px',\n};\n\nconst closeIcon = {\n    color: '#9E9E9E',\n    cursor: 'pointer',\n    height: '40px',\n    marginRight: '10px',\n    marginTop: '10px',\n    width: '40px',\n};\n\ninterface PlayMediaProps { }\ninterface PlayMediaState {\n    link?: string,\n    openDialog: boolean,\n    type: string,\n    title?: string\n}\n\nexport default class PlayMediaComponent extends React.Component<PlayMediaProps, PlayMediaState> {\n\n    constructor(props: PlayMediaProps) {\n        super(props);\n        this.state = {\n            link: '',\n            openDialog: false,\n            title: '',\n            type: '',\n        };\n\n    }\n    componentDidMount() {\n        const dialogService = DialogService.getInstance();\n        dialogService.showPlayMediaDialog = this.handleShowMedia.bind(this);\n    }\n\n    handleShowMedia(nasaItem: INasaItem) {\n        this.setState({\n            title: nasaItem.title,\n        });\n        Store.getMetaData(nasaItem)\n            .then((data) => {\n\n                if (nasaItem.type === 'image') {\n                    let originImageUrl = data.find((item) => item.indexOf('~orig.jpg') >= 0);\n                    if (!originImageUrl) {\n                        originImageUrl = data.find((item) => item.indexOf('.jpg') >= 0);\n                    }\n                    this.setState({\n                        link: originImageUrl,\n                        openDialog: true,\n                        type: nasaItem.type,\n                    });\n\n                } else if (nasaItem.type === 'video') {\n                    let originVideoUrl =\n                        data.find((item) => item.indexOf('~orig.mp3') >= 0 || item.indexOf('~orig.mp4') >= 0);\n                    if (!originVideoUrl) {\n                        originVideoUrl = data.find((item) => item.indexOf('.mp3') >= 0 || item.indexOf('.mp4') >= 0);\n                    }\n                    this.setState({\n                        link: originVideoUrl,\n                        openDialog: true,\n                        type: nasaItem.type,\n                    });\n                }\n            });\n    }\n\n    handlCloseDialog() {\n        this.setState({\n            openDialog: false,\n        });\n    }\n\n    render() {\n        const theme = getNasaTheme();\n        return (\n            <ThemeProvider theme={theme}>\n                <Dialog\n                    className={'dialogBox'}\n                    maxWidth={'xl'}\n                    scroll={'body'}\n                    style={dialogBox}\n                    onClose={() => this.handlCloseDialog()}\n                    aria-labelledby='play-media'\n                    open={this.state.openDialog}>\n                    <DialogContent dividers={true} style={boxContent}>\n                        <div>\n                            <div style={titleMessage}>{this.state.title}</div>\n                            <div style={closeButton} onClick={() => this.handlCloseDialog()}>\n                                <CloseIcon style={closeIcon} />\n                            </div>\n                            <div>\n                                {this.state.type === 'image' ?\n                                    <img style={mediaBox} src={this.state.link} alt='' /> : null}\n                                {this.state.type === 'video' ?\n                                    <video controls={true} style={mediaBox}>\n                                        <source\n                                            src={this.state.link}\n                                            type='video/mp4' />\n                                        <source\n                                            src={this.state.link}\n                                            type='video/mp3' />\n                                    </video> : null}\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </ThemeProvider>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\n/* tslint:disable:interface-over-type-literal */\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\n// import { createStore, applyMiddleware } from 'redux';\n// import createSagaMiddleware from 'redux-saga';\n// import { helloSaga } from './stateManagement/saga';\n\nimport HomeComponent from './component/home/Home';\nimport SearchComponent from './component/search/Search';\nimport DetailComponent from './component/detail/Detail';\nimport NotFound from './component/notfound/NotFound';\nimport PlayMediaComponent from './component/playMedia/PlayMedia';\n\nimport * as serviceWorker from './serviceWorker';\n\n/*\nfunction reducers(state: any, action: any) {\n  console.log(state, action);\n  return state;\n  // switch (action.type) {\n  //   case 'INCREMENT':\n  //     return state + 1;\n  //   case 'DECREMENT':\n  //     return state - 1;\n  //   default:\n  //     return state;\n  // }\n}\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducers,\n  applyMiddleware(sagaMiddleware)\n);\nsagaMiddleware.run(helloSaga);\n\n// tslint:disable-next-line:no-any\nconst action = (type: any) => store.dispatch({ type });\n*/\nconst routing = (\n  <div>\n    <Router>\n      <Switch>\n        <Route exact path='/' component={HomeComponent} />\n        <Route path='/nasa_search' component={SearchComponent} />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n    <PlayMediaComponent />\n    <DetailComponent />\n  </div>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}